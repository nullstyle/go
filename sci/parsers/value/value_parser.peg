package sci

type ValueParser Peg {
  System *System
  Result *Value
  Err error
}

first <- sp magnitude sp unit !. {
  p.Result = &sci.Value{
    M: p.m,
    U: p.u,
  }
}

unit <- < .* > {
  unitstr := buffer[begin:end]
  unit, err := p.System.ParseUnit(unitstr)
  if err != nil {
    p.Err = errors.Wrap(err, "parse unit")
    return
  }

  p.u = unit  
}

magnitude <- < sci / float_exp /  float / int_exp / int > {
  p.m = buffer[start:end]
}

sci <- float 'E' int
float_exp <- minus? [1-9][0-9]* '.' [0-9]+ '^' exp
float <- minus? [1-9][0-9]* '.' [0-9]+
int_exp <- minus? [1-9][0-9]* '^' exp
int <- minus? [1-9][0-9]*

exp <- minus? [1-9][0-9]*
minus <- '-'
sp <- ( ' ' / '\t' )*